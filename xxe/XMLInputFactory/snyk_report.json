{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "SnykCode",
          "semanticVersion": "1.0.0",
          "version": "1.0.0",
          "rules": [
            {
              "id": "java/XXE/test",
              "name": "XXE/test",
              "shortDescription": {
                "text": "XML External Entity (XXE) Injection"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nFor convenience, XML documents can use system identifiers to enable access to stored content, whether local or remote. The XML processor then uses the system identifier to access the resource rather than using the URI. When this weakness exists, the application permits user-supplied data, which could include the address of an XML external identity, to be passed directly to the XML parser. The application will then attempt to retrieve documents from outside of secure, controlled areas.\n\nAttackers can exploit this weakness to expose sensitive data, execute port scanning on the server side, or launch a denial-of-service attack (DoS) such as Billion Laughs.\n\n### Best practices for prevention\n\n* When possible, disable loading of data from external entities. The method of doing this will vary based on the language and XML parser being used.\n* Use a local, static document type definitions (DTDs) and ensure that external DTDs are disallowed entirely.\n* If user input cannot be avoided, perform validation against an allowlist of possible data sources. However, as long as external DTDs are allowed, XML code remains inherently vulnerable to attacks exploiting this weakness.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/Unidata/netcdf-java/commit/475707c10fd20b92a48187aad1ac6379fe126e32?diff=split#diff-2ab50dd3fd1834707ceae5e424963a52L98",
                    "lines": [
                      {
                        "line": "static private org.jdom.Document getCapabilities(String endpoint) throws IOException {",
                        "lineNumber": 95,
                        "lineChange": "none"
                      },
                      {
                        "line": "  org.jdom.Document doc;",
                        "lineNumber": 96,
                        "lineChange": "none"
                      },
                      {
                        "line": "  HttpMethod method = null;",
                        "lineNumber": 97,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  HTTPMethod method = null;",
                        "lineNumber": 97,
                        "lineChange": "added"
                      },
                      {
                        "line": "  try {",
                        "lineNumber": 98,
                        "lineChange": "none"
                      },
                      {
                        "line": "    method = CdmRemote.sendQuery(endpoint, \"req=capabilities\");",
                        "lineNumber": 99,
                        "lineChange": "none"
                      },
                      {
                        "line": "    InputStream in = method.getResponseBodyAsStream();",
                        "lineNumber": 100,
                        "lineChange": "none"
                      },
                      {
                        "line": "    SAXBuilder builder = new SAXBuilder(false);",
                        "lineNumber": 101,
                        "lineChange": "none"
                      },
                      {
                        "line": "    doc = builder.build(in);",
                        "lineNumber": 102,
                        "lineChange": "none"
                      },
                      {
                        "line": "  } catch (Throwable t) {",
                        "lineNumber": 104,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/wirecardBrasil/mockkid/commit/002008cf918a84f962f2fe27cbdb4ba2685c6ae0?diff=split#diff-b441fb2c8c0aa00121642142978b8a0bL18",
                    "lines": [
                      {
                        "line": "private static final Logger logger = LoggerFactory.getLogger(XMLBodyVariableResolver.class);",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "public static String extractValueFromXml(String name, HttpServletRequest request) {",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "    try {",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "        DocumentBuilderFactory builderFactory =",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "                DocumentBuilderFactory.newInstance();",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "        DocumentBuilder builder = builderFactory.newDocumentBuilder();",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "        Document document = builder.parse(request.getInputStream());",
                        "lineNumber": 22,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        Document document = builder.parse(((MockkidRequest) request).getSafeInputStream());",
                        "lineNumber": 23,
                        "lineChange": "added"
                      },
                      {
                        "line": "        XPath xPath =  XPathFactory.newInstance().newXPath();",
                        "lineNumber": 25,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/IanDarwin/javasrc/commit/8251ef48893e6333dee02e29925c16ba933d7d14?diff=split#diff-f4d7011ca260d567d50d5aa022009b3dL17",
                    "lines": [
                      {
                        "line": " */",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "public class SAXLister {",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "  public static void main(String[] args) throws Exception {",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "    new SAXLister(args);",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "  ",
                        "lineNumber": 21,
                        "lineChange": "added"
                      },
                      {
                        "line": "  public SAXLister(String[] args) throws SAXException, IOException {",
                        "lineNumber": 22,
                        "lineChange": "added"
                      },
                      {
                        "line": "    XMLReader parser = XMLReaderFactory",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "        .createXMLReader(\"org.apache.xerces.parsers.SAXParser\");",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "    // should load properties rather than hardcoding class name",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "    parser.setContentHandler(new PeopleHandler());",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "    parser.parse(args.length == 1 ? args[0] : \"parents.xml\");",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "  ",
                        "lineNumber": 29,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Move loadind XML documents from streams to XML utils class.",
                  "Added support for File comparator",
                  "Adding unit tests"
                ],
                "precision": "very-high",
                "repoDatasetSize": 110,
                "cwe": [
                  "CWE-611"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "java/XXE/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into createXMLStreamReader, which allows expansion of external entity references. This may result in a XXE attack leading to the disclosure of confidential data or denial of service.",
            "markdown": "Unsanitized input from {0} {1} into {2}, which allows expansion of external entity references. This may result in a XXE attack leading to the disclosure of confidential data or denial of service.",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3),(4)",
              "[createXMLStreamReader](5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/Test.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 23,
                  "endLine": 23,
                  "startColumn": 23,
                  "endColumn": 48
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e0c76ac460f00a3d9166eb3617f3c55c9eeba09c3b0af6ae269ba95a4ac2916d",
            "1": "b05cc7e9.7facb658.33fa5dbe.7510fb0d.0bbc4dbc.7fda7c5e.9601e799.55425d48.c9f51d48.e7c4b4d3.33fa5dbe.e22980a8.f0e1baa5.7fda7c5e.0ac97cd8.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/Test.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 24,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/Test.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 24,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/Test.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 16,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/Test.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 23,
                            "endLine": 23,
                            "startColumn": 53,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/Test.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 23,
                            "endLine": 23,
                            "startColumn": 49,
                            "endColumn": 72
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/Test.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 23,
                            "endLine": 23,
                            "startColumn": 23,
                            "endColumn": 48
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 450,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        }
      ],
      "properties": {
        "coverage": [
          {
            "files": 6,
            "isSupported": true,
            "lang": "XML"
          },
          {
            "files": 1,
            "isSupported": true,
            "lang": "Java"
          }
        ]
      }
    }
  ]
}
